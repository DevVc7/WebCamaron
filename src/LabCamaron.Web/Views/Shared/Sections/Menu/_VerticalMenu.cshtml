@inject LabCamaronWeb.Servicios.Parametrizacion.Interfaces.ISeEmpresaService seEmpresaService
@{
    TempData.Keep();
    var modulos = Context.Session.Obtener<List<PermisoUsuarioVm.ModuloVm>>(SesionConstantes.Modulos) ?? [];

    var consulta = await seEmpresaService
      .ConsultarTodos(new());

    var nombreEmpresa = consulta.Respuesta.EsExitosa
      ? consulta.Resultados?.FirstOrDefault()?.Nombre ?? string.Empty
      : string.Empty;
}

<!-- Menu -->
@* ! Do this simple *@
<aside id="layout-menu" class="layout-menu menu-vertical menu bg-menu-theme">

    @* ! Hide app brand if navbar-full *@
    <div class='app-brand demo @((@ViewData["navbarFull"] != null && Convert.ToBoolean(@ViewData["navbarFull"])) ? "d-xl-none" : "")'>
        <a asp-controller="Home" asp-action="Index" class="app-brand-link">
            <span class="app-brand-logo demo">
                <img src="~/img/favicon/laboratorio-24.png"> @* Icono Empresa *@
            </span>
            <span class="app-brand-text demo menu-text fw-bold ms-2">@nombreEmpresa</span> @* Nombre Empresa *@
        </a>

        <a href="javascript:void(0);" class="layout-menu-toggle menu-link text-large ms-auto d-block d-xl-none">
            <i class="bx bx-chevron-left bx-sm d-flex align-items-center justify-content-center"></i>
        </a>
    </div>

    <div class="menu-inner-shadow"></div>

    @* ! Full version menu-items *@
    <ul class="menu-inner py-1">
        <!-- Dashboards -->
        @foreach (var modulo in modulos.OrderBy(e => e.Orden))
        {
            // Solo filtramos los permisos que tengan un codigo de VER
            var menus = modulo.Menus
              .Where(e => e.Mostrar && e.Permisos.Any(x => x.Codigo == PermisoGeneral.Ver))
              .OrderBy(e => e.Orden)
              .ToList();

            if (!menus.Any()) continue;

            <li class='menu-item @(ObtenerCssModuloSeleccionado(menus))'>
                <a href="javascript:void(0);" class="menu-link menu-toggle">
                    <i class="menu-icon tf-icons @modulo.IconoModulo"></i>
                    <div class="text-truncate" data-i18n="@modulo.Nombre">@modulo.Nombre</div>
                </a>
                @foreach (var menu in menus)
                {
                    <ul class="menu-sub">
                        <li class='menu-item @(ObtenerCssMenuSeleccionado(menu.Controlador))'>
                            <a asp-controller="@menu.Controlador" asp-action="@menu.Accion" class="menu-link">
                                <i class="menu-icon tf-icons @menu.IconoMenu"></i>
                                <div class="ms-2 text-wrap">@menu.Nombre</div>
                            </a>
                        </li>
                    </ul>
                }
            </li>
        }
    </ul>
</aside>
@functions {
    private string ObtenerCssModuloSeleccionado(List<PermisoUsuarioVm.MenuVm> menus)
    {
        bool existeRuta = false;
        foreach (var menu in menus)
        {
            var cssMenu = ObtenerCssMenuSeleccionado(menu.Controlador);

            if (!string.IsNullOrEmpty(cssMenu)) {

                existeRuta = true;
                break;  
            };
        }

        return existeRuta ? "active open" : "";
    }

    private string ObtenerCssMenuSeleccionado(string controlador)
    {
        var currentPage = ViewContext.HttpContext.Request.Path.ToString() ?? string.Empty;
        var existeRuta = $"{currentPage}/".Contains($"/{controlador}/");

        return existeRuta ? "active open" : "";
    }
}
<!-- / Menu -->
